<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://p2key.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://p2key.github.io/" rel="alternate" type="text/html" /><updated>2021-02-07T02:52:24+03:00</updated><id>https://p2key.github.io/feed.xml</id><title type="html">p2Key</title><subtitle>Birşeyler kodluyoruz</subtitle><author><name>Mesut Üşenmez</name><email>mesutusenmez89@gmail.com</email></author><entry><title type="html">Note Application - Sequence Diagram-I</title><link href="https://p2key.github.io/2021-02-07/note-application-sequence-diagram-i" rel="alternate" type="text/html" title="Note Application - Sequence Diagram-I" /><published>2021-02-07T00:00:00+03:00</published><updated>2021-02-07T00:00:00+03:00</updated><id>https://p2key.github.io/2021-02-07/note-application-sequence-diagram-i</id><content type="html" xml:base="https://p2key.github.io/2021-02-07/note-application-sequence-diagram-i">&lt;p&gt;Hi all,&lt;/p&gt;

&lt;p&gt;We will talk about sequence diagram of note application in the previous post.  Sequence diagrams is referred flow of process. We apply this approach for the note application.
Firstly drew  for “show all notes” use case.&lt;/p&gt;

&lt;p&gt;“Show all notes” sequence diagram:
&lt;img src=&quot;/assets/img/noteapp_sequence_diagram.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;“NoteListFragment” class extends from “Fragment” abstract class.  “getNotesByLimit” method of “NoteDatabase” extended from “RoomDatabase” is called inside “onViewCreated” method of “NoteListFragment”.&lt;/p&gt;

&lt;p&gt;In this step we can write code template on based the sequence diagram.&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;NoteFragment.java&lt;/ins&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NoteFragment&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Fragment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onViewCreated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NonNull&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;NoteDatabase&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noteDatabase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NoteDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;NoteDao&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noteDao&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;noteDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;noteDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Note&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;notes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;noteDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getByLimit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;ins&gt;NoteDatabase.java&lt;/ins&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@Database&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entities&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Note&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NoteDatabase&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RoomDatabase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NoteDatabase&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;INSTANCE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NoteDatabase&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;INSTANCE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;NoteDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;INSTANCE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;no&quot;&gt;INSTANCE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Room&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;databaseBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getApplicationContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
                            &lt;span class=&quot;nc&quot;&gt;NoteDatabase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;note_database&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;INSTANCE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NoteDao&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;noteDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;ins&gt;NoteDao.java&lt;/ins&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@Dao&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NoteDao&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT * FROM notes LIMIT :limit OFFSET :offset&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Note&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getByLimit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;ins&gt;NoteDao.java&lt;/ins&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Note&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We designed sequence diagram and wrote class on based this sequence diagram. Next article we’re going to design class diagram of use case that we selected as “show all notes”.&lt;/p&gt;</content><author><name>Mesut Üşenmez</name><email>mesutusenmez89@gmail.com</email></author><category term="noteapplication" /><category term="sequencediagram" /><summary type="html">Hi all,</summary></entry><entry><title type="html">Note Application - Use Cases-I</title><link href="https://p2key.github.io/2021-01-25/note-application-use-cases-i" rel="alternate" type="text/html" title="Note Application - Use Cases-I" /><published>2021-01-25T00:00:00+03:00</published><updated>2021-01-25T00:00:00+03:00</updated><id>https://p2key.github.io/2021-01-25/note-application-use-cases-i</id><content type="html" xml:base="https://p2key.github.io/2021-01-25/note-application-use-cases-i">&lt;p&gt;Hello everyone,&lt;/p&gt;

&lt;p&gt;Today I’m starting to develop a new note application. I hope it helps you this article series. Because I’m going to cover all development processes on simple way.&lt;/p&gt;

&lt;p&gt;Let’s start by designing  use case diagrams.&lt;/p&gt;

&lt;p&gt;Mobile devices are most connected to Internet as you know. That’s why we chose mobile users as actor in the  use case diagrams and  there are 6 use cases.&lt;/p&gt;

&lt;p&gt;Below shown use case diagram:
&lt;img src=&quot;/assets/img/noteapp_use_cases.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;It is wrote user stories to better explain the  user diagram.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Story 1:&lt;/strong&gt; Show All Notes &lt;br /&gt;
&lt;strong&gt;Priority:&lt;/strong&gt; High &lt;br /&gt;
&lt;strong&gt;Estimate:&lt;/strong&gt; 13 &lt;br /&gt;
&lt;strong&gt;Description:&lt;/strong&gt; &lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Click the note application on mobile phone&lt;/li&gt;
  &lt;li&gt;Get notes by limit 10 from database&lt;/li&gt;
  &lt;li&gt;List notes that got in.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Acceptance Criterias:&lt;/strong&gt; &lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Listed notes must be clickable.&lt;/li&gt;
  &lt;li&gt;User can load 10 notes when click “load more” button everytimes.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Everything is OK for the user story  ? :) Unfortunately NO! Some statements appear unclear. For example; “Get notes by limit 10 from database”. How?
You should explain it such that you can’t ask the question of HOW.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Let’s write this row again.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Connect the local database by “Room” persistence library provided by Android&lt;/li&gt;
  &lt;li&gt;Get “id”, “title”, “content”, “create date”, “update date” values of “NOTES” table for 10 records using Room&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That is better than before. We explained better how to do it. But It is not still what we want.&lt;/p&gt;

&lt;p&gt;“List notes that got in”. How?&lt;/p&gt;

&lt;p&gt;Write the sentence again.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;List “title” and “create date “ of each note item.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that’s allright.&lt;/p&gt;

&lt;p&gt;In last status the user story:&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Story 1:&lt;/strong&gt; Show All Notes &lt;br /&gt;
&lt;strong&gt;Priority:&lt;/strong&gt; High &lt;br /&gt;
&lt;strong&gt;Estimate:&lt;/strong&gt; 13 &lt;br /&gt;
&lt;strong&gt;Description:&lt;/strong&gt; &lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Click the note application on mobile phone&lt;/li&gt;
  &lt;li&gt;Connect the local database by “Room” persistence library provided by Android&lt;/li&gt;
  &lt;li&gt;Get “id”, “title”, “content”, “create date”, “update date” values of “NOTES” table for 10 records using Room&lt;/li&gt;
  &lt;li&gt;List “title” and “create date “ of each note item.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Acceptance Criterias:&lt;/strong&gt; &lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Show the notes as “title” and “create date” by limit 10 records.&lt;/li&gt;
  &lt;li&gt;Listed notes must be clickable but when clicked, no action for now.&lt;/li&gt;
  &lt;li&gt;User can load 10 notes when click “load more” button everytimes.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I hope this article was usefull.&lt;/p&gt;

&lt;p&gt;See you.&lt;/p&gt;</content><author><name>Mesut Üşenmez</name><email>mesutusenmez89@gmail.com</email></author><category term="noteapplication" /><category term="usercase" /><summary type="html">Hello everyone,</summary></entry><entry><title type="html">Hello World!</title><link href="https://p2key.github.io/2021-01-23/hello-world" rel="alternate" type="text/html" title="Hello World!" /><published>2021-01-23T00:00:00+03:00</published><updated>2021-01-23T00:00:00+03:00</updated><id>https://p2key.github.io/2021-01-23/hello-world</id><content type="html" xml:base="https://p2key.github.io/2021-01-23/hello-world">&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;We are going to code something on this blog.&lt;/p&gt;

&lt;p&gt;See you soon.&lt;/p&gt;</content><author><name>Mesut Üşenmez</name><email>mesutusenmez89@gmail.com</email></author><category term="hello" /><summary type="html">Hello,</summary></entry></feed>