I"™<p>Hi all,</p>

<p>We will talk about sequence diagram of note application in the previous post.  Sequence diagrams is referred flow of process. We apply this approach for the note application.
Firstly drew  for ‚Äúshow all notes‚Äù use case.</p>

<p>‚ÄúShow all notes‚Äù sequence diagram:
<img src="/assets/img/noteapp_sequence_diagram.png" alt="" /></p>

<p>‚ÄúNoteListFragment‚Äù class extends from ‚ÄúFragment‚Äù abstract class.  ‚ÄúgetNotesByLimit‚Äù method of ‚ÄúNoteDatabase‚Äù extended from ‚ÄúRoomDatabase‚Äù is called inside ‚ÄúonViewCreated‚Äù method of ‚ÄúNoteListFragment‚Äù.</p>

<p>In this step we can write code template on based the sequence diagram.</p>

<p><ins>NoteFragment.java</ins></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NoteFragment</span> <span class="kd">extends</span> <span class="nc">Fragment</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onViewCreated</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="nc">View</span> <span class="n">view</span><span class="o">,</span> <span class="nc">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
		<span class="o">..</span>
		<span class="nc">NoteDatabase</span> <span class="n">noteDatabase</span> <span class="o">=</span> <span class="nc">NoteDatabase</span><span class="o">.</span><span class="na">getDatabase</span><span class="o">(</span><span class="n">view</span><span class="o">.</span><span class="na">getContext</span><span class="o">());</span>
		<span class="nc">NoteDao</span> <span class="n">noteDao</span> <span class="o">=</span>  <span class="n">noteDatabase</span><span class="o">.</span><span class="na">noteDao</span><span class="o">();</span>
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">Note</span><span class="o">&gt;</span> <span class="n">notes</span> <span class="o">=</span>  <span class="n">noteDao</span><span class="o">.</span><span class="na">getByLimit</span><span class="o">(</span><span class="n">limit</span><span class="o">,</span> <span class="n">offset</span><span class="o">);</span>
		<span class="o">..</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p><ins>NoteDatabase.java</ins></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre><span class="nd">@Database</span><span class="o">(</span><span class="n">entities</span> <span class="o">=</span> <span class="o">{</span><span class="nc">Note</span><span class="o">.</span><span class="na">class</span><span class="o">},</span> <span class="n">version</span> <span class="o">=</span> <span class="mi">1</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">NoteDatabase</span> <span class="kd">extends</span> <span class="nc">RoomDatabase</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">volatile</span> <span class="nc">NoteDatabase</span> <span class="no">INSTANCE</span><span class="o">;</span>

    <span class="kd">static</span> <span class="nc">NoteDatabase</span> <span class="nf">getDatabase</span><span class="o">(</span><span class="kd">final</span> <span class="nc">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="no">INSTANCE</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="kd">synchronized</span> <span class="o">(</span><span class="nc">NoteDatabase</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="no">INSTANCE</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                    <span class="no">INSTANCE</span> <span class="o">=</span> <span class="nc">Room</span><span class="o">.</span><span class="na">databaseBuilder</span><span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">getApplicationContext</span><span class="o">(),</span>
                            <span class="nc">NoteDatabase</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="s">"note_database"</span><span class="o">)</span>
                            <span class="o">.</span><span class="na">build</span><span class="o">();</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="no">INSTANCE</span><span class="o">;</span>
    <span class="o">}</span>


    <span class="kd">public</span> <span class="kd">abstract</span> <span class="nc">NoteDao</span> <span class="nf">noteDao</span><span class="o">();</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p><ins>NoteDao.java</ins></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="nd">@Dao</span>
<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">NoteDao</span> <span class="o">{</span>
    <span class="nd">@Query</span><span class="o">(</span><span class="s">"SELECT * FROM notes LIMIT :limit OFFSET :offset"</span><span class="o">)</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Note</span><span class="o">&gt;</span> <span class="nf">getByLimit</span><span class="o">(</span><span class="kt">int</span> <span class="n">limit</span><span class="o">,</span> <span class="kt">int</span> <span class="n">offset</span><span class="o">);</span>

<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p><ins>NoteDao.java</ins></p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="nd">@Entity</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Note</span> <span class="o">{</span>
	<span class="o">..</span>
<span class="o">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>this approach for the note application.</p>
:ET